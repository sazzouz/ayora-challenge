[tool.poetry]
name = "ayora-server"
version = "1.0.0"
description = "Ayora Server Application"
authors = ["szzz <s.azzouz97@gmail.com>"]
package-mode = false

[tool.poetry.dependencies]
boto3 = "^1.26.74"
celery = "^5.2.7"
cffi = "^1.15.1"
dj-database-url = "^2.1.0"
Django = "^5.0"
django-celery-beat = "^2.4.0"
django-cors-headers = "^4.3.1"
django-environ = "^0.11.2"
django-extensions = "^3.2.3"
django-filter = "^24.2"
django-fsm = "^2.8.1"
django-ipware = "^7.0.1"
django-redis = "^5.2.0"
django-structlog = "^8.0.0"
djangorestframework = "^3.13.1"
docutils = "^0.21.2"
drf-spectacular = "^0.28"
drf-standardized-errors = {extras = ["openapi"], version = "^0.14.1"}
flower = "^2.0"
gunicorn = "^23.0.0"
Markdown = "^3.3.7"
Pillow = "^11.0.0"
psycopg2 = "^2.9.5"
pydantic = {extras=["email"], version="^2.1.1"}
python = ">=3.11,<3.12"
requests = "^2.28.1"
sqids = "^0.5.0"
structlog = "^24.1.0"
typeguard = "^4.1.0"
pygments = "^2.19.1"
pydantic-extra-types = "^2.10.2"
filetype = "^1.2.0"
djangorestframework-camel-case = "^1.4.2"

[tool.poetry.group.dev.dependencies]
bpython = "^0.24"
django-coverage-plugin = "^3.0.0"
django-extensions = "^3.2.1"
django-stubs = {extras = ["compatible-mypy"], version = "^5.1"}
djangorestframework-stubs = {extras = ["compatible-mypy"], version = "^3.15"}
factory-boy = "^3.2.1"
flaky = "^3.7.0"
freezegun = "^1.2.2"
ipdb = "^0.13.11"
ipykernel = "^6.22.0"
polyfactory = "^2.8.0"
pytest = "^8.0.0"
pytest-cov = "^6.0.0"
pytest-django = "^4.8.0"
pytest-httpserver = "^1.0.6"
pytest-random-order = "^1.1.1"
pytest-xdist = "^3.6.0"
pydantic-extra-types = "^2.1.0"
ruff = "^0.9.2"
types-dj-database-url = "^1.3.0.4"

[build-system]
requires = ["poetry-core>=1.0.0"]
build-backend = "poetry.core.masonry.api"

[tool.mypy]
show_error_codes = true
strict_optional = true
no_implicit_optional = true
warn_unused_ignores = true
check_untyped_defs = true
warn_unreachable = true
strict_equality = true
follow_imports = "skip"
plugins = [
  "mypy_django_plugin.main",
  "mypy_drf_plugin.main",
]

[[tool.mypy.overrides]]
module = "*.migrations.*"
ignore_errors = true

[[tool.mypy.overrides]]
module = "pytest"
ignore_missing_imports = true

[tool.ruff]
target-version = "py311"
extend-exclude = ["*/migrations/*", "*/snapshots/*", "*/__snapshots__/*"]
line-length = 120

[tool.ruff.lint]
extend-select = [
  "E501",
  "UP",  # pyupgrade
  "DJ" # flake8-django
  ]
extend-ignore = []


[tool.ruff.lint.extend-per-file-ignores]
"__init__.py" = ["F401","E501"]

[tool.pytest.ini_options]
python_files = ["tests.py", "test_*.py", "*_tests.py"]
addopts = [
  "--ds=config.settings.test",
  "--random-order"
]
markers = [
  "slow: marks tests as slow",
  "serial: marks tests as serial",
  "enable_signals: marks tests to run with signal enabled",
]

[tool.django-stubs]
django_settings_module = "ayora.config.settings"
ignore_missing_model_attributes = false
ignore_missing_settings = true

[tool.coverage.report]
exclude_also = [
    "def __repr__",
    "def __str__",
    "if self.debug:",
    "if settings.DEBUG",
    "raise AssertionError",
    "raise NotImplementedError",
    "if 0:",
    "if __name__ == .__main__.:",
    "if TYPE_CHECKING:",
    "class .*\\bProtocol\\):",
    "@(abc\\.)?abstractmethod",
    "class .*\\bMeta\\(.*\\):",
    "migrations/*",
    "snapshots/*",
    "__snapshots__/*",
    "admin/*",
  ]
